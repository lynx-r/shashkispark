buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
    }
}

allprojects {
    apply plugin: 'java'
    apply plugin: 'idea'

    group = 'com.workingbit'
    version = '1.0'
}

subprojects {
    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
        maven { url "https://jitpack.io" }
    }

    dependencies {
        compile 'org.apache.commons:commons-lang3:3.5'
        compile 'org.apache.commons:commons-collections4:4.1'

        compile 'com.amazonaws:aws-lambda-java-core:1.1.0'
        compile 'com.amazonaws.serverless:aws-serverless-java-container-spark:0.7'
        compile 'com.amazonaws:aws-java-sdk-dynamodb:1.11.150'
        compile 'com.amazonaws:aws-lambda-java-core:1.1.0'
        compile 'com.amazonaws:aws-lambda-java-log4j:1.0.0'

        compile 'org.projectlombok:lombok:1.16.18'

        compile "com.sparkjava:spark-core:2.6.0"
//        compile 'com.sparkjava:spark-debug-tools:0.5'

        compile 'com.fasterxml.jackson.core:jackson-core:2.8.5'
        compile 'com.fasterxml.jackson.core:jackson-databind:2.8.5'
        compile 'com.fasterxml.jackson.core:jackson-annotations:2.8.5'

        compile 'uk.com.robust-it:cloning:1.9.5'

        compile 'io.reactivex:rxjava:1.2.2'
    }
}

project(':articleservice') {
    apply plugin: 'application'

    mainClassName = 'com.workingbit.article.Application'

    dependencies {
        compile project(':sharedmodule')
    }

// Task for building the zip file for upload
    task buildZip(type: Zip) {
        // Using the Zip API from gradle to build a zip file of all the dependencies
        //
        // The path to this zip file can be set in the serverless.yml file for the
        // package/artifact setting for deployment to the S3 bucket
        //
        // Link: https://docs.gradle.org/current/dsl/org.gradle.api.tasks.bundling.Zip.html

        // set the base name of the zip file
        baseName = "articleservice"
        from compileJava
        from processResources
        into("lib") {
            from configurations.runtime
        }
    }

    build.dependsOn buildZip
}

project(':boardservice') {
    apply plugin: 'application'

    mainClassName = 'com.workingbit.board.Application'

    dependencies {
        compile 'com.github.rutledgepaulv:prune:1.3'

        compile project(':sharedmodule')
    }

    task copyRuntimeLibs(type: Copy) {
        into "$buildDir/libs/deps/lib"
        from configurations.runtime
    }

    task batchZip(type: Zip) {
        from sourceSets.main.output, "$buildDir/libs/deps"
    }
}

project(':sharedmodule') {
    jar {
        baseName = 'sharedmdoule'
        version = "${sharemodule_version}"
    }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}


task wrapper(type: Wrapper) {
    gradleVersion = '4.0'
}
